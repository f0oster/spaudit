package site

import (
	"fmt"
	"spaudit/interfaces/web/presenters"
	"spaudit/interfaces/web/templates/components/ui"
)

// SiteListsTable renders the lists table with search functionality
templ SiteListsTable(vm presenters.SiteListsVM) {
	<div class="bg-white border rounded-xl shadow-sm">
		<div class="px-6 py-4 border-b flex items-center justify-between">
			<div>
				<h2 class="font-semibold text-lg text-slate-900">Lists</h2>
				<p class="text-sm text-slate-500">SharePoint lists in this site</p>
			</div>
			if len(vm.Lists) > 0 {
				<div class="flex items-center gap-3">
					<input type="search" 
						   name="search" 
						   placeholder="Filter lists..." 
						   class="border rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" 
						   hx-get={ "/sites/" + fmt.Sprintf("%d", vm.Site.SiteID) + "/audit-runs/" + fmt.Sprintf("%d", vm.AuditRunID) + "/lists/search" }
						   hx-target="#lists-table tbody"
						   hx-trigger="input changed delay:300ms, search"
						   hx-indicator="#search-loading" />
					<div id="search-loading" class="htmx-indicator">
						<div class="animate-spin h-4 w-4 border-2 border-blue-500 border-t-transparent rounded-full"></div>
					</div>
				</div>
			}
		</div>
		
		if len(vm.Lists) == 0 {
			<div class="px-6 py-12 text-center">
				<div class="text-slate-400 text-4xl mb-4">ðŸ“‹</div>
				<h3 class="text-lg font-medium text-slate-900 mb-2">No lists found</h3>
				<p class="text-slate-500">This site doesn't have any audited lists, or they couldn't be retrieved.</p>
			</div>
		} else {
			<div class="overflow-x-auto">
				<table class="w-full text-sm" id="lists-table">
					<thead class="bg-slate-50 text-slate-600">
						<tr>
							<th class="text-left px-6 py-3 font-medium">List Details</th>
							<th class="text-left px-3 py-3 font-medium">Items</th>
							<th class="text-left px-3 py-3 font-medium">Permission Scope</th>
							<th class="text-left px-3 py-3 font-medium">Last Updated</th>
							<th class="text-right px-6 py-3 font-medium">Actions</th>
						</tr>
					</thead>
					<tbody class="divide-y divide-slate-200">
						for _, list := range vm.Lists {
							<tr class="hover:bg-slate-50 cursor-default group">
								<td class="px-6 py-4">
									<div class="flex flex-col">
										<div class="font-semibold text-slate-900">{ list.Title }</div>
										<div class="text-xs text-slate-500 mt-1">in { list.WebTitle }</div>
										<div class="text-xs text-slate-400 break-all mt-1">{ list.URL }</div>
									</div>
								</td>
								<td class="px-3 py-4">
									<span class="font-medium">{ fmt.Sprintf("%d", list.ItemCount) }</span>
								</td>
								<td class="px-3 py-4">
									@ui.PermissionsBadge(list.HasUnique)
								</td>
								<td class="px-3 py-4">
									if list.LastModified != "" {
										<span class="text-xs text-slate-600">{ list.LastModified }</span>
									} else {
										<span class="text-xs text-slate-500">Unknown</span>
									}
								</td>
								<td class="px-6 py-4 text-right">
									<a href={ "/sites/" + fmt.Sprintf("%d", list.SiteID) + "/audit-runs/" + fmt.Sprintf("%d", vm.AuditRunID) + "/lists/" + list.ListID } 
									   class="inline-flex items-center px-3 py-2 text-sm font-medium text-blue-600 hover:text-blue-700 hover:bg-blue-50 rounded-lg transition-colors">
										View Details â†’
									</a>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		}
	</div>
}