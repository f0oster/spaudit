// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"spaudit/interfaces/web/presenters"
	"spaudit/interfaces/web/templates/components/sharepoint"
	"strings"
)

func AssignmentsList(collection presenters.AssignmentCollection) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if len(collection.Assignments) == 0 {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"text-slate-500 text-xs\">No explicit role assignments found for this item.</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = sharepoint.ConditionalLimitedAccessHelp(collection.HasLimitedAccess).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = sharepoint.ConditionalSharingLinkHelp(collection.HasSharingLinks).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " <div class=\"text-xs text-slate-600 mb-3\"><span class=\"font-medium\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", len(collection.Assignments)))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `interfaces/web/templates/pages/assignments.templ`, Line: 18, Col: 80}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, " role assignments:</span></div><!-- Compact assignments table --> <div class=\"overflow-x-auto\"><table class=\"w-full text-sm\"><thead class=\"bg-slate-50 text-slate-600\"><tr><th class=\"text-left px-3 py-2 font-medium w-1/3\">Principal</th><th class=\"text-left px-3 py-2 font-medium w-1/4\">Login</th><th class=\"text-left px-3 py-2 font-medium w-1/6\">Role</th><th class=\"text-left px-3 py-2 font-medium w-1/12\">Type</th><th class=\"text-left px-3 py-2 font-medium w-1/12\">Source</th></tr></thead> <tbody class=\"divide-y divide-slate-200\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, a := range collection.Assignments {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<tr class=\"hover:bg-slate-50\"><td class=\"px-3 py-2\"><div class=\"flex items-center gap-2 min-w-0\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if strings.HasPrefix(a.LoginName, "SharingLinks.") {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<span class=\"principal-icon principal-icon--unknown\">ðŸ”—</span> <span class=\"font-medium text-amber-900 text-sm truncate\">Sharing Link</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = sharepoint.PrincipalIcon(a.PrincipalType).Render(ctx, templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, " <span class=\"font-medium text-slate-900 text-sm truncate\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var3 string
					templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(a.PrincipalTitle)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `interfaces/web/templates/pages/assignments.templ`, Line: 43, Col: 96}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</div></td><td class=\"px-3 py-2\"><div class=\"text-slate-600 text-xs font-mono break-all\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(a.LoginName)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `interfaces/web/templates/pages/assignments.templ`, Line: 48, Col: 85}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</div></td><td class=\"px-3 py-2\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if a.RoleName == "Limited Access" || a.RoleName == "Web-Only Limited Access" {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<span class=\"inline-flex items-center px-2 py-1 text-xs rounded-md bg-orange-50 text-orange-800 border border-orange-200\" title=\"Automatically granted by SharePoint\">Limited âš¡</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<span class=\"inline-flex items-center px-2 py-1 text-xs rounded-md bg-blue-50 text-blue-800 border border-blue-200\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var5 string
					templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(a.RoleName)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `interfaces/web/templates/pages/assignments.templ`, Line: 57, Col: 32}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</td><td class=\"px-3 py-2\"><div class=\"text-xs text-slate-600\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				switch a.PrincipalType {
				case 1:
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "User")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				case 2:
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "DL")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				case 4:
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "Security")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				case 8:
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "SP Group")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				case 16:
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "All Users")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				default:
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "Unknown")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "</div></td><td class=\"px-3 py-2\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				if a.Inherited {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "<span class=\"status-badge status-badge--inherited w-5 h-5 rounded-full text-xs justify-center\" title=\"Inherited\">â¬†</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				} else {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "<span class=\"status-badge status-badge--direct w-5 h-5 rounded-full text-xs justify-center\" title=\"Direct\">âš«</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "</td></tr>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "</tbody></table></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
